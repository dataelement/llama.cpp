<BOS_TOKEN><|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|># Safety Preamble
The instructions in this section override those in the task description and style guide sections. Don't answer questions that are harmful or immoral

# System Preamble
## Basic Rules
You are a powerful language agent trained by Cohere to help people. You are capable of complex reasoning and augmented with a number of tools. Your job is to plan and reason about how you will use and consume the output of these tools to best help the user. You will see a conversation history between yourself and a user, ending with an utterance from the user. You will then see an instruction informing you what kind of response to generate. You will construct a plan and then perform a number of reasoning and action steps to solve the problem. When you have determined the answer to the user's request, you will cite your sources in your answers, according the instructions

# User Preamble
You are a helpful assistant.


## Available Tools
Here is a list of tools that you have available to you:

```python
def sina_realtime_info(prefix: str, stock_exchange: str, stock_symbol: str) -> List[Dict]:
    """查询中国A股（沪深北交易所）股票或指数的实时行情数据，返回收盘价、涨跌额、涨跌幅、成交量、成交额

    Args:
        prefix (str): 前缀。如果是"stock_symbol"传入的为股票代码，则需要传入s_;如果"stock_symbol"传入的为指数代码，则为空。
        stock_exchange (str): 交易所简写。股票上市的交易所，或者发布行情指数的交易所。可选项有"sh"(上海证券交易所)、" sz"( 深圳证券交易所)、"bj"( 北京证券交易所)
        stock_symbol (str): 6位数字的股票或者指数代码。
参考信息：
- 如果问题中未给出，可能需要上网查询。
- 上交所股票通常以 6 开头，深交所股票通常以 0、3 开头，北交所股票通常以 8 开头。
- 上交所行情指数通常以 000 开头，深交所指数通常以 399 开头。同一个指数可能会同时在两个交易所发布，例如沪深 300 有"sh000300"和"sz399300"两个代码。
    """
    pass
```

```python
def sina_history_KLine(stock_symbol: str, stock_exchange: str, date: str) -> List[Dict]:
    """查询中国A股（沪深北交易所）股票或指数的的历史行情数据，返回时间、开盘价、最高价、最低价、收盘价、成交量（股）

    Args:
        stock_symbol (str): 6位数字的股票或者指数代码。
参考信息：
- 如果问题中未给出，可能需要上网查询。
- 上交所股票通常以 6 开头，深交所股票通常以 0、3 开头，北交所股票通常以 8 开头。
- 上交所行情指数通常以 000 开头，深交所指数通常以 399 开头。同一个指数可能会同时在两个交易所发布，例如沪深 300 有"sh000300"和"sz399300"两个代码。
        stock_exchange (str): 交易所简写。股票上市的交易所，或者发布行情指数的交易所。可选项有"sh"(上海证券交易所)、" sz"( 深圳证券交易所)、"bj"( 北京证券交易所)
        date (str): 需要查询的时间，按照”2024-03-26“格式，传入日期
    """
    pass
```

```python
def bisheng_code_interpreter(python_code: str) -> List[Dict]:
    """Evaluates python code in native environment. You must send the whole script every time and print your outputs. Script should be pure python code that can be evaluated. It should be in python format NOT markdown. The code should NOT be wrapped in backticks. If you have any files outputted write them to "output/" relative to the execution path. Output can only be read from the directory, stdout, and stdin. Do not use things like plot.show() as it will not work instead write them out `output/`print() any output and results so you can capture the output.

    Args:
        python_code (str): The pure python script to be evaluated. The contents will be in main.py. It should not be in markdown format.
    """
    pass
```

```python
def bing_search(query: str) -> List[Dict]:
    """A wrapper around Bing Search. Useful for when you need to answer questions about current events. Input should be a search query.

    Args:
        query (str): query to look up in Bing search
    """
    pass
```

```python
def get_current_time(timezone: str) -> List[Dict]:
    """get_current_time(timezone='Asia/Shanghai') - 获取当前UTC时间以及主要时区的时间，可用于时间、日期等场景相关的计算。当问题涉及到时间，调用此工具来查询和时间有关的内容。

    Args:
        timezone (str): The timezone to get the current time in. Such as 'Asia/Shanghai','Pacific/Palau' or 'US/Mountain'.
    """
    pass
```

```python
def calculator(expression: str) -> List[Dict]:
    """calculator(expression) - Useful to perform any mathematical calculations,
    like sum, minus, multiplication, division, etc

    Args:
        expression (str): The input to this tool should be a mathematical expression using only Python's built-in mathematical operators.
    """
    pass
```

```python
def dalle_image_generator(query: str) -> List[Dict]:
    """A wrapper around OpenAI DALL-E API. Useful for when you need to generate images from a text description. Input should be an image description.

    Args:
        query (str): Description about image.
    """
    pass
```

```python
def macro_china_money_supply(start_date: str, end_date: str) -> List[Dict]:
    """中国货币供应量（M2，M1，M0）月度统计数据。返回月份，M2 数量（单位：亿元），M2 同比（单位：%），M2 环比（单位：%）， M1 数量（单位：亿元），M1 同比（单位：%），M1 环比（单位：%）， M0数量（单位：亿元），M0 同比（单位：%），M0 环比（单位：%）
        

    Args:
        start_date (str): 开始月份, 使用YYYY-MM-DD 方式表示
        end_date (str): 结束月份，使用YYYY-MM-DD 方式表示
    """
    pass
```

```python
def macro_china_shrzgm(start_date: str, end_date: str) -> List[Dict]:
    """中国社会融资规模增量月度统计数据。返回月份，社会融资规模增量(单位：亿元)，以及社融分项包括：人民币贷款，外币贷款，委托贷款，信托贷款，未贴现银行承兑汇票，企业债券，非金融企业境内股票融资
        

    Args:
        start_date (str): 开始月份, 使用YYYY-MM-DD 方式表示
        end_date (str): 结束月份，使用YYYY-MM-DD 方式表示
    """
    pass
```<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|USER_TOKEN|>600519、300750股价多少？<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|>Carefully perform the following instructions, in order, starting each with a new line.
Firstly, You may need to use complex and advanced reasoning to complete your task and answer the question. Think about how you can use the provided tools to answer the question and come up with a high level plan you will execute.
Write 'Plan:' followed by an initial high level plan of how you will solve the problem including the tools and steps required.
Secondly, Carry out your plan by repeatedly using actions, reasoning over the results, and re-evaluating your plan. Perform Action, Observation, Reflection steps with the following format. Write 'Action:' followed by a json formatted action containing the "tool_name" and "parameters"
 Next you will analyze the 'Observation:', this is the result of the action.
After that you should always think about what to do next. Write 'Reflection:' followed by what you've figured out so far, any changes you need to make to your plan, and what you will do next including if you know the answer to the question.
... (this Action/Observation/Reflection can repeat N times)
Finally, Write 'Answer:' followed by a response to the user's last input. Use the retrieved documents to help you. Do not insert any citations or grounding markup.

Additional instructions to note:
- If the user's question is in Chinese, please answer it in Chinese. 
- 当问题中有涉及到时间信息时，比如最近6个月、昨天、去年等，你需要用时间工具查询时间信息。
 <|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|CHATBOT_TOKEN|>Plan: 我需要分别查询600519和300750的实时行情数据，然后回答问题。
Action: ```json
[
    {
        "tool_name": "sina_realtime_info",
        "parameters": {
            "prefix": "s_",
            "stock_exchange": "sh",
            "stock_symbol": "600519"
        }
    },
    {
        "tool_name": "sina_realtime_info",
        "parameters": {
            "prefix": "s_",
            "stock_exchange": "sz",
            "stock_symbol": "300750"
        }
    }
]
```<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|><results>
Document: 0
Content: var hq_str_s_sh600519="贵州茅台,1646.640,-24.140,-1.44,23499,387923";

</results><|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|CHATBOT_TOKEN|>Plan: 我需要分别查询600519和300750的实时行情数据，然后回答问题。
Action: ```json
[
    {
        "tool_name": "sina_realtime_info",
        "parameters": {
            "prefix": "s_",
            "stock_exchange": "sh",
            "stock_symbol": "600519"
        }
    },
    {
        "tool_name": "sina_realtime_info",
        "parameters": {
            "prefix": "s_",
            "stock_exchange": "sz",
            "stock_symbol": "300750"
        }
    }
]
```<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|><results>
Document: 1
Content: var hq_str_s_sz300750="宁德时代,190.80,-4.760,-2.43,184914,353348";

</results><|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|CHATBOT_TOKEN|>
