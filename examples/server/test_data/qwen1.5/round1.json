{
    "messages": [
        {
            "content": "You are a helpful assistant.你必须先使用get_current_time这个工具查询当前时间，再进行下一步查询。",
            "role": "system"
        },
        {
            "content": "请画一下2023年M2同比增长的数据折线图",
            "role": "user"
        }
    ],
    "model": "qwen1.5",
    "tools": [
        {
            "type": "function",
            "function": {
                "name": "sina_realtime_info",
                "description": "查询中国A股（沪深北交易所）股票或指数的实时行情数据，返回收盘价、涨跌额、涨跌幅、成交量、成交额",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "prefix": {
                            "description": "前缀。如果是\"stock_symbol\"传入的为股票代码，则需要传入s_;如果\"stock_symbol\"传入的为指数代码，则为空。",
                            "default": "",
                            "type": "string"
                        },
                        "stock_exchange": {
                            "description": "交易所简写。股票上市的交易所，或者发布行情指数的交易所。可选项有\"sh\"(上海证券交易所)、\" sz\"( 深圳证券交易所)、\"bj\"( 北京证券交易所)",
                            "type": "string"
                        },
                        "stock_symbol": {
                            "description": "6位数字的股票或者指数代码。\n参考信息：\n- 如果问题中未给出，可能需要上网查询。\n- 上交所股票通常以 6 开头，深交所股票通常以 0、3 开头，北交所股票通常以 8 开头。\n- 上交所行情指数通常以 000 开头，深交所指数通常以 399 开头。同一个指数可能会同时在两个交易所发布，例如沪深 300 有\"sh000300\"和\"sz399300\"两个代码。",
                            "type": "string"
                        }
                    },
                    "required": [
                        "stock_exchange",
                        "stock_symbol"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "sina_history_KLine",
                "description": "查询中国A股（沪深北交易所）股票或指数的的历史行情数据，返回时间、开盘价、最高价、最低价、收盘价、成交量（股）",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "stock_symbol": {
                            "description": "6位数字的股票或者指数代码。\n参考信息：\n- 如果问题中未给出，可能需要上网查询。\n- 上交所股票通常以 6 开头，深交所股票通常以 0、3 开头，北交所股票通常以 8 开头。\n- 上交所行情指数通常以 000 开头，深交所指数通常以 399 开头。同一个指数可能会同时在两个交易所发布，例如沪深 300 有\"sh000300\"和\"sz399300\"两个代码。",
                            "type": "string"
                        },
                        "stock_exchange": {
                            "description": "交易所简写。股票上市的交易所，或者发布行情指数的交易所。可选项有\"sh\"(上海证券交易所)、\" sz\"( 深圳证券交易所)、\"bj\"( 北京证券交易所)",
                            "type": "string"
                        },
                        "date": {
                            "description": "需要查询的时间，按照”2024-03-26“格式，传入日期",
                            "type": "string"
                        }
                    },
                    "required": [
                        "stock_symbol",
                        "stock_exchange",
                        "date"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "bisheng_code_interpreter",
                "description": "Evaluates python code in native environment. You must send the whole script every time and print your outputs. Script should be pure python code that can be evaluated. It should be in python format NOT markdown. The code should NOT be wrapped in backticks. If you have any files outputted write them to \"output/\" relative to the execution path. Output can only be read from the directory, stdout, and stdin. Do not use things like plot.show() as it will not work instead write them out `output/`print() any output and results so you can capture the output.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "python_code": {
                            "description": "The pure python script to be evaluated. The contents will be in main.py. It should not be in markdown format.",
                            "example": "print('Hello World')",
                            "type": "string"
                        }
                    },
                    "required": [
                        "python_code"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "bing_search",
                "description": "A wrapper around Bing Search. Useful for when you need to answer questions about current events. Input should be a search query.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "query": {
                            "description": "query to look up in Bing search",
                            "type": "string"
                        }
                    },
                    "required": [
                        "query"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "get_current_time",
                "description": "get_current_time(timezone='Asia/Shanghai') - 获取当前UTC时间以及主要时区的时间，可用于时间、日期等场景相关的计算。当问题涉及到时间，调用此工具来查询和时间有关的内容。",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "timezone": {
                            "description": "The timezone to get the current time in. Such as 'Asia/Shanghai','Pacific/Palau' or 'US/Mountain'.",
                            "default": "Asia/Shanghai",
                            "type": "string"
                        }
                    }
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "calculator",
                "description": "calculator(expression) - Useful to perform any mathematical calculations,\n    like sum, minus, multiplication, division, etc",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "expression": {
                            "description": "The input to this tool should be a mathematical expression using only Python's built-in mathematical operators.",
                            "example": "200*7",
                            "type": "string"
                        }
                    },
                    "required": [
                        "expression"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "dalle_image_generator",
                "description": "A wrapper around OpenAI DALL-E API. Useful for when you need to generate images from a text description. Input should be an image description.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "query": {
                            "description": "Description about image.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "query"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "macro_china_money_supply",
                "description": "中国货币供应量（M2，M1，M0）月度统计数据。返回月份，M2 数量（单位：亿元），M2 同比（单位：%），M2 环比（单位：%）， M1 数量（单位：亿元），M1 同比（单位：%），M1 环比（单位：%）， M0数量（单位：亿元），M0 同比（单位：%），M0 环比（单位：%）\n        ",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "start_date": {
                            "description": "开始月份, 使用YYYY-MM-DD 方式表示",
                            "default": "",
                            "example": "2023-01-01",
                            "type": "string"
                        },
                        "end_date": {
                            "description": "结束月份，使用YYYY-MM-DD 方式表示",
                            "default": "",
                            "example": "2023-05-01",
                            "type": "string"
                        }
                    }
                }
            }
        }
    ]
}